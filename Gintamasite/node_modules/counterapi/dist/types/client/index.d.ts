import { CounterConfig, CounterResponse, CounterStatsResponse } from '../types/index.js';
/**
 * Main Counter client class
 */
export declare class Counter {
    private http;
    private namespace;
    private version;
    constructor(config: CounterConfig);
    /**
     * Get the current counter value
     * @param name - The counter name
     * @returns Promise resolving to counter response
     */
    get(name: string): Promise<CounterResponse>;
    /**
     * Increment the counter value by 1
     * @param name - The counter name
     * @returns Promise resolving to counter response
     */
    up(name: string): Promise<CounterResponse>;
    /**
     * Decrement the counter value by 1
     * @param name - The counter name
     * @returns Promise resolving to counter response
     */
    down(name: string): Promise<CounterResponse>;
    /**
     * Set the counter value (v1 only)
     * @param name - The counter name
     * @param value - The value to set
     * @returns Promise resolving to counter response
     */
    set(name: string, value: number): Promise<CounterResponse>;
    /**
     * Reset the counter value to 0 (v2 only)
     * @param name - The counter name
     * @returns Promise resolving to counter response
     */
    reset(name: string): Promise<CounterResponse>;
    /**
     * Get counter statistics (v2 only)
     * @param name - The counter name
     * @returns Promise resolving to counter stats response
     */
    stats(name: string): Promise<CounterStatsResponse>;
    /**
     * Creates a URL by replacing placeholders in the endpoint pattern
     */
    private createEndpointUrl;
}
export declare const CounterClient: typeof Counter;
//# sourceMappingURL=index.d.ts.map