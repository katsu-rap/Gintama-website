{"version":3,"file":"counter.esm.js","sources":["../../src/http/index.ts","../../src/client/index.ts"],"sourcesContent":["import axios, { AxiosInstance, AxiosRequestConfig, AxiosResponse } from 'axios';\nimport { HttpClient, ApiError, ApiConfig } from '../types/index.js';\n\n/**\n * API Configuration\n */\nexport const API_CONFIG: ApiConfig = {\n  v1: {\n    baseUrl: 'https://api.counterapi.dev/v1',\n    endpoints: {\n      up: '/{namespace}/{name}/up',\n      down: '/{namespace}/{name}/down',\n      get: '/{namespace}/{name}',\n      set: '/{namespace}/{name}/?count={value}',\n    },\n  },\n  v2: {\n    baseUrl: 'https://api.counterapi.dev/v2',\n    endpoints: {\n      up: '/{workspace}/{name}/up',\n      down: '/{workspace}/{name}/down',\n      get: '/{workspace}/{name}',\n      reset: '/{workspace}/{name}/reset',\n      stats: '/{workspace}/{name}/stats',\n    },\n  },\n};\n\n/**\n * Axios-based HTTP client implementation\n */\nexport class AxiosHttpClient implements HttpClient {\n  private client: AxiosInstance;\n  private version: 'v1' | 'v2';\n  private accessToken?: string;\n\n  constructor(config: {\n    version: 'v1' | 'v2';\n    timeout?: number;\n    debug?: boolean;\n    accessToken?: string;\n  }) {\n    this.version = config.version;\n    this.accessToken = config.accessToken;\n\n    this.client = axios.create({\n      baseURL: API_CONFIG[this.version].baseUrl,\n      timeout: config.timeout || 10000,\n      headers: {\n        'Content-Type': 'application/json',\n        ...(config.accessToken && { 'Authorization': `Bearer ${config.accessToken}` })\n      }\n    });\n\n    // Request interceptor for debugging\n    if (config.debug) {\n      this.client.interceptors.request.use((request) => {\n        console.log('[CounterAPI] Request:', {\n          method: request.method?.toUpperCase(),\n          url: request.url,\n          headers: request.headers,\n          data: request.data\n        });\n        return request;\n      });\n    }\n\n    // Response interceptor for debugging and error handling\n    this.client.interceptors.response.use(\n      (response: AxiosResponse) => {\n        if (config.debug) {\n          console.log('[CounterAPI] Response:', {\n            status: response.status,\n            data: response.data\n          });\n        }\n        return response;\n      },\n      (error) => {\n        if (config.debug) {\n          console.log('[CounterAPI] Error:', {\n            status: error.response?.status,\n            data: error.response?.data,\n            message: error.message\n          });\n        }\n\n        // Transform axios error to our custom error format\n        const apiError: ApiError = {\n          message: error.response?.data?.message || error.message || 'Request failed',\n          status: error.response?.status,\n          code: error.response?.data?.code || error.code,\n          details: error.response?.data\n        };\n\n        throw apiError;\n      }\n    );\n  }\n\n  /**\n   * Creates a URL by replacing placeholders in the endpoint pattern\n   */\n  createUrl(endpoint: string, params: Record<string, string | number>): string {\n    let url = endpoint;\n    \n    // Replace named parameters in URL pattern\n    for (const [key, value] of Object.entries(params)) {\n      url = url.replace(`{${key}}`, String(value));\n    }\n    \n    return url;\n  }\n\n  async get<T>(url: string, config?: AxiosRequestConfig): Promise<T> {\n    const response = await this.client.get<T>(url, config);\n    return response.data;\n  }\n\n  async post<T>(url: string, data?: unknown, config?: AxiosRequestConfig): Promise<T> {\n    const response = await this.client.post<T>(url, data, config);\n    return response.data;\n  }\n} ","import { \n  CounterConfig, \n  CounterResponse,\n  CounterStatsResponse,\n  HttpClient \n} from '../types/index.js';\nimport { AxiosHttpClient, API_CONFIG } from '../http/index.js';\n\n/**\n * Main Counter client class\n */\nexport class Counter {\n  private http: HttpClient;\n  private namespace: string;\n  private version: 'v1' | 'v2';\n\n  constructor(config: CounterConfig) {\n    this.version = config.version || 'v2'; // Default to v2 if not specified\n    \n    // Handle namespace/workspace parameter based on version\n    if (this.version === 'v2') {\n      // For v2, prefer workspace parameter if provided, otherwise fall back to namespace\n      this.namespace = config.workspace || config.namespace || '';\n    } else {\n      // For v1, use namespace parameter\n      this.namespace = config.namespace || '';\n    }\n    \n    // Validate required config\n    if (!this.namespace) {\n      if (this.version === 'v2') {\n        throw new Error('Workspace is required for v2 API');\n      } else {\n        throw new Error('Namespace is required for v1 API');\n      }\n    }\n\n    // Initialize HTTP client\n    this.http = new AxiosHttpClient({\n      version: this.version,\n      timeout: config.timeout,\n      debug: config.debug,\n      accessToken: config.accessToken\n    });\n  }\n\n  /**\n   * Get the current counter value\n   * @param name - The counter name\n   * @returns Promise resolving to counter response\n   */\n  async get(name: string): Promise<CounterResponse> {\n    if (!name) {\n      throw new Error('Counter name is required');\n    }\n\n    const endpoint = this.createEndpointUrl('get', { name });\n    return await this.http.get<CounterResponse>(endpoint);\n  }\n\n  /**\n   * Increment the counter value by 1\n   * @param name - The counter name\n   * @returns Promise resolving to counter response\n   */\n  async up(name: string): Promise<CounterResponse> {\n    if (!name) {\n      throw new Error('Counter name is required');\n    }\n\n    const endpoint = this.createEndpointUrl('up', { name });\n    return await this.http.get<CounterResponse>(endpoint);\n  }\n\n  /**\n   * Decrement the counter value by 1\n   * @param name - The counter name\n   * @returns Promise resolving to counter response\n   */\n  async down(name: string): Promise<CounterResponse> {\n    if (!name) {\n      throw new Error('Counter name is required');\n    }\n\n    const endpoint = this.createEndpointUrl('down', { name });\n    return await this.http.get<CounterResponse>(endpoint);\n  }\n\n  /**\n   * Set the counter value (v1 only)\n   * @param name - The counter name\n   * @param value - The value to set\n   * @returns Promise resolving to counter response\n   */\n  async set(name: string, value: number): Promise<CounterResponse> {\n    if (this.version !== 'v1') {\n      throw new Error('set method is only available in v1');\n    }\n    \n    if (!name) {\n      throw new Error('Counter name is required');\n    }\n\n    const endpoint = this.createEndpointUrl('set', { name, value });\n    return await this.http.get<CounterResponse>(endpoint);\n  }\n\n  /**\n   * Reset the counter value to 0 (v2 only)\n   * @param name - The counter name\n   * @returns Promise resolving to counter response\n   */\n  async reset(name: string): Promise<CounterResponse> {\n    if (this.version !== 'v2') {\n      throw new Error('reset method is only available in v2');\n    }\n    \n    if (!name) {\n      throw new Error('Counter name is required');\n    }\n\n    const endpoint = this.createEndpointUrl('reset', { name });\n    return await this.http.get<CounterResponse>(endpoint);\n  }\n\n  /**\n   * Get counter statistics (v2 only)\n   * @param name - The counter name\n   * @returns Promise resolving to counter stats response\n   */\n  async stats(name: string): Promise<CounterStatsResponse> {\n    if (this.version !== 'v2') {\n      throw new Error('stats method is only available in v2');\n    }\n    \n    if (!name) {\n      throw new Error('Counter name is required');\n    }\n\n    const endpoint = this.createEndpointUrl('stats', { name });\n    return await this.http.get<CounterStatsResponse>(endpoint);\n  }\n\n  /**\n   * Creates a URL by replacing placeholders in the endpoint pattern\n   */\n  private createEndpointUrl(method: string, params: { name: string, value?: number }): string {\n    // Get the endpoint pattern based on version and method\n    const endpoints = API_CONFIG[this.version].endpoints;\n    let endpointPattern: string | undefined;\n    \n    if (this.version === 'v1') {\n      const v1Endpoints = endpoints as typeof API_CONFIG['v1']['endpoints'];\n      endpointPattern = v1Endpoints[method as keyof typeof v1Endpoints];\n    } else {\n      const v2Endpoints = endpoints as typeof API_CONFIG['v2']['endpoints'];\n      endpointPattern = v2Endpoints[method as keyof typeof v2Endpoints];\n    }\n    \n    if (!endpointPattern) {\n      throw new Error(`Invalid method: ${method}`);\n    }\n\n    // Replace namespace/workspace placeholder based on version\n    const namespaceKey = this.version === 'v1' ? 'namespace' : 'workspace';\n    \n    // Prepare params for URL creation\n    const urlParams = {\n      [namespaceKey]: this.namespace,\n      ...params\n    };\n\n    // In axios HTTP client, create the URL by replacing placeholders\n    return (this.http as AxiosHttpClient).createUrl(endpointPattern, urlParams);\n  }\n}\n\n// Backward compatibility alias\nexport const CounterClient = Counter; "],"names":[],"mappings":"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"}